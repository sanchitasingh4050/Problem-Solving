class Solution {
public:
    int uniquePaths(int m, int n) {//easy peasy
        int arr[m][n];
        
        // Initializing the first row and first column with 1s
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(i == 0 || j == 0)
                    arr[i][j] = 1;//sice there is only one way to go to the 1st cell
                else
                    arr[i][j] = 0;
            }
        }
        
        // Dynamic Programming approach to calculate unique paths
        for(int i = 1; i < m; i++){//row
            for(int j = 1; j < n; j++){//column
                arr[i][j] = arr[i-1][j] + arr[i][j-1];//total no. of paths to reach any cell
            }
        }
        
        return arr[m-1][n-1];
    }
};