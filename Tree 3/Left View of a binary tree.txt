vector<int> printLeftView(BinaryTreeNode<int>* root) {      //easy peasy
                                                            
    if(root==NULL){ return {};}

    vector<int>v;
    queue<BinaryTreeNode<int>*>q;

    q.push(root);

    while(!q.empty()){

        int size=q.size();
        
        v.push_back(q.front()->data);   //since we only need the first (leftmost node of the binary tree)
                                       //so it will always be the first node after each level is traversed
     
        for(int i=0;i<size;i++){

            BinaryTreeNode<int>*  current= q.front();
            q.pop();

            if(current->left!=NULL){ q.push(current->left); }
            if (current->right!=NULL) { q.push(current->right); }
        }
    }
        return v;
}