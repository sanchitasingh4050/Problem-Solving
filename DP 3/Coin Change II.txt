public:
    int change(int amount, vector<int>& coins) {
        int n = coins.size();
        vector<vector<int>> dp(n + 1, vector<int>(amount + 1, 0));
        
        // Base case: 1 way to make up amount 0
        for (int i = 0; i <= n; ++i) {
            dp[i][0] = 1;
        }
        
        for (int i = 1; i <= n; ++i) {
            for (int j = 1; j <= amount; ++j) {
                // Exclude coins[i-1]
                dp[i][j] = dp[i-1][j];
                // Include coins[i-1] if it's possible
                if (j - coins[i-1] >= 0) {
                    dp[i][j] += dp[i][j - coins[i-1]];
                }
            }
        }
        
        return dp[n][amount];
    }
};