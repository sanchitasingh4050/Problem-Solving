class Solution {
public:
    int jump(vector<int>& nums) {
        int n = nums.size();
        if (n <= 1) return 0;

        int jumps = 1;
        int farthest = nums[0]; // Represents the farthest index we can reach with the current number of jumps
        int currentEnd = nums[0]; // Represents the current range's end

        for (int i = 1; i < n - 1; i++) {
            farthest = max(farthest, i + nums[i]);
            if (i == currentEnd) {//to check current no.s end
                jumps++;
                currentEnd = farthest;
            }
        }
        return jumps;
    }
};