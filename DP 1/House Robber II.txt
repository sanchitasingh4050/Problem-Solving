class Solution {
private:
    int maxAmount(vector<int>& nums) {
        int n = nums.size();
        int prev1 = INT_MIN;
        int prev2 = nums[0];

        for(int i = 1; i < n; i++){
            int current;
            if(i-2 < 0){
                current = max(prev2, nums[i]);
            }
            else{
                current = max(prev2, prev1 + nums[i]);
            }
            prev1 = prev2;
            prev2 = current;
        }
        return prev2;
    }
public:
    int rob(vector<int>& nums) {
        int n = nums.size();
        if(n == 1) return nums[0];
        
        vector<int> withoutFirst, withoutLast;

        for(int i = 1; i < n; i++){
            withoutFirst.push_back(nums[i]);
        }
        for(int i = 0; i < n - 1; i++){
            withoutLast.push_back(nums[i]);
        }

        return max(maxAmount(withoutFirst), maxAmount(withoutLast));
    }
};
