class Solution{      //easy peasy // here we only need to find the minimum element in the array & return its index value /position
public:	
	int findKRotation(int arr[], int n) {
	    int low=0;
	    int high=n-1;
	    int mid=0;
	    int ans=INT_MAX;
	    int index=0;
	    while(low<=high){
	        //find the sorted part
	        mid=(low+high)/2;
            if(arr[low]<=arr[mid]){        //it means left part is sorted //but it doesn't always mean it has the min element too
               ans=min(ans,arr[low]);
               if (ans==arr[low]) { index=low;}              //as the min can be at the 0th index only in that left part
               low=mid+1;
            }
            else{                         //otherwise if right part is sorted
                ans=min(ans,arr[mid]);

                if(ans==arr[mid]){ index=mid;}  

                high=mid-1;               //search for min elem at left part as well as we may have the min elem at left part as well
            }
            
        }
        return index;
    }
};